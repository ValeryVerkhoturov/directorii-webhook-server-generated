/*
 * Directorii Webhook API
 *
 * API for receiving webhooks related to a contractor.  To effectively use the API for receiving webhooks, follow these steps:  1. **Generate a Program Template**:    - Visit the Swagger Editor at [Swagger Editor](https://editor.swagger.io/).    - Use the \"Generate Server\" button to create a template that suits your needs.  2. **Customize Your Webhook Path** (optional):    - In the generated template, locate the route designated as `/lead-created-or-updated`.    - Replace this placeholder path with your specific webhook URL that will handle incoming requests.  3. **Set up on Directorii Webhook Page**:    - Once you have your customized webhook path, navigate to the Directorii Webhook page.    - Configure your webhook path according to the protocol, domain name and path of your application.  By following these steps, you can ensure that your API is properly set up to receive notifications.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"LeadCreatedOrUpdated",
		strings.ToUpper("Post"),
		"/lead-created-or-updated",
		LeadCreatedOrUpdated,
	},
}
